{"ast":null,"code":"// src/api/api.js\n\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8080/api'; // Spring API URL\n\n// 로그인 API 요청\nexport const login = async loginData => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, loginData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data; // API 응답 데이터 반환\n  } catch (error) {\n    throw error.response ? error.response.data : error.message; // 오류 처리\n  }\n};\n\n// 회원가입 API 요청\nexport const register = async registerData => {\n  try {\n    const response = await axios.post(`${API_URL}/members/register`, registerData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : error.message;\n  }\n};","map":{"version":3,"names":["axios","API_URL","login","loginData","response","post","headers","data","error","message","register","registerData"],"sources":["/Users/aenggyu/Desktop/JavaWorkSpace/springEx/order_system_client/src/api/api.js"],"sourcesContent":["// src/api/api.js\n\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api';  // Spring API URL\n\n// 로그인 API 요청\nexport const login = async (loginData) => {\n    try {\n        const response = await axios.post(`${API_URL}/login`, loginData, {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        return response.data;  // API 응답 데이터 반환\n    } catch (error) {\n        throw error.response ? error.response.data : error.message;  // 오류 처리\n    }\n};\n\n// 회원가입 API 요청\nexport const register = async (registerData) => {\n    try {\n        const response = await axios.post(`${API_URL}/members/register`, registerData, {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        return response.data;\n    } catch (error) {\n        throw error.response ? error.response.data : error.message;\n    }\n};"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAE;;AAE9C;AACA,OAAO,MAAMC,KAAK,GAAG,MAAOC,SAAS,IAAK;EACtC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,QAAQ,EAAEE,SAAS,EAAE;MAC7DG,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAE;EAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,CAACG,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC,CAAE;EACjE;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,YAAY,IAAK;EAC5C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,mBAAmB,EAAEU,YAAY,EAAE;MAC3EL,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,CAACG,IAAI,GAAGC,KAAK,CAACC,OAAO;EAC9D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}