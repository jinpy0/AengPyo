{"ast":null,"code":"var _jsxFileName = \"/Users/aenggyu/Desktop/AengPyo/AengPyo/frontend/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const navigate = useNavigate(); // 페이지 이동을 위한 useNavigate 훅\n\n  // 회원가입 후 생성된 회원 ID를 저장 (추후 조회 URL에 사용)\n  const [id, setId] = useState(\"\");\n\n  // 사용자 입력을 저장할 상태 변수\n  const [formdata, setFormdata] = useState({\n    loginId: '',\n    name: '',\n    password: ''\n  });\n\n  // 입력값 변경 시 상태 업데이트\n  const change = e => {\n    setFormdata({\n      ...formdata,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // 회원가입 요청 함수\n  const submit = async e => {\n    e.preventDefault(); // 기본 제출 이벤트 방지\n\n    try {\n      // 백엔드 API로 회원가입 요청을 보냄\n      const response = await axios.post(\"http://localhost:8080/api/members/register\", formdata, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        } // JSON 형식으로 데이터 전송\n      });\n      const {\n        id\n      } = response.data; // 서버 응답에서 회원 ID 추출\n      setId(id); // 회원 ID 상태 업데이트\n\n      // 회원가입 완료 후 해당 회원의 상세 페이지로 이동\n      navigate(`/members/${id}`);\n    } catch (err) {\n      console.log(\"회원가입 오류:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [\"\\uC544\\uC774\\uB514: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"loginId\",\n        value: formdata.loginId,\n        onChange: change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 100\n      }, this), \"\\uC774\\uB984: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formdata.name,\n        onChange: change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 93\n      }, this), \"\\uBE44\\uBC00\\uBC88\\uD638: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formdata.password,\n        onChange: change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 107\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"THcnur++V2ltJwYtd7OhVHUTjC4=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useNavigate","axios","useState","jsxDEV","_jsxDEV","Register","_s","navigate","id","setId","formdata","setFormdata","loginId","name","password","change","e","target","value","submit","preventDefault","response","post","headers","data","err","console","log","className","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aenggyu/Desktop/AengPyo/AengPyo/frontend/src/components/Register.js"],"sourcesContent":["import {useNavigate} from 'react-router-dom';\nimport axios from 'axios';\nimport {useState} from \"react\";\n\nfunction Register() {\n\n    const navigate = useNavigate();  // 페이지 이동을 위한 useNavigate 훅\n\n    // 회원가입 후 생성된 회원 ID를 저장 (추후 조회 URL에 사용)\n    const [id, setId] = useState(\"\");\n\n    // 사용자 입력을 저장할 상태 변수\n    const [formdata, setFormdata] = useState({\n        loginId: '',\n        name: '',\n        password: ''\n    });\n\n    // 입력값 변경 시 상태 업데이트\n    const change = (e) => {\n        setFormdata({...formdata, [e.target.name]: e.target.value});\n    };\n\n    // 회원가입 요청 함수\n    const submit = async (e) => {\n        e.preventDefault(); // 기본 제출 이벤트 방지\n\n        try {\n            // 백엔드 API로 회원가입 요청을 보냄\n            const response = await axios.post(\"http://localhost:8080/api/members/register\", formdata, {\n                headers: {\"Content-Type\": \"application/json\"}  // JSON 형식으로 데이터 전송\n            });\n\n            const {id} = response.data; // 서버 응답에서 회원 ID 추출\n            setId(id);  // 회원 ID 상태 업데이트\n\n            // 회원가입 완료 후 해당 회원의 상세 페이지로 이동\n            navigate(`/members/${id}`);\n\n        } catch (err) {\n            console.log(\"회원가입 오류:\", err);\n        }\n    };\n\n    return (\n        <div className=\"register\">\n            <form onSubmit={submit}>\n                아이디: <input type=\"text\" name=\"loginId\" value={formdata.loginId} onChange={change}/><br/>\n                이름: <input type=\"text\" name=\"name\" value={formdata.name} onChange={change}/><br/>\n                비밀번호: <input type=\"password\" name=\"password\" value={formdata.password} onChange={change}/><br/>\n                <input type=\"submit\" value=\"회원가입\"/>\n            </form>\n        </div>\n    );\n}\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}